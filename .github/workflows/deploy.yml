name: Deploy Playwright Lambda

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2
  IMAGE_TAG: joaquin-latest
  AWS_ECR_REPOSITORY: technical-test

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image to ECR
        run: |
          IMAGE_URI=${{ secrets.AWS_ECR_REPOSITORY_URL }}:${{ env.IMAGE_TAG }}
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Deploy with Serverless
        env:
          AWS_SERVICE_NAME: ${{ secrets.AWS_SERVICE_NAME }}
          AWS_LAMBDA_FUNCTION_NAME: ${{ secrets.AWS_LAMBDA_FUNCTION_NAME }}
          AWS_ECR_REPOSITORY_URL: ${{ secrets.AWS_ECR_REPOSITORY_URL }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
        run: npx serverless deploy
